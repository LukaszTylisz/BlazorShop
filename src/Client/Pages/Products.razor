@page "/Products"
@using Client.HttpClients
@using Client.Services
@using BlazorShop.Resources
@using global::Shared.DTOs
@inject ShopHttpClient ShopHttpClient
@inject AppStateService AppStateService
@inject CartService CartService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h1>Products</h1>

<p>
    <button @onclick="() =>  NavigateToCreatingProduct()" class="button create-button">Create</button>
</p>

@foreach (var product in ShopProducts)
{
    <div class="single-item">
        <strong>Name:</strong> @product.Name
        <br />
        <strong>Price:</strong> @product.Price EUR
        <br /><br />
        <div class="inline-block">
            <button @onclick="() => NavigateToEditingProduct(product.Id)" class="button">Edit</button>
        </div>
        <div class="inline-block">
            <button @onclick="() => DeleteProduct(product)" class="button">Delete</button>
        </div>
        <div class="add-to-cart-link">
            <a href="" @onclick="() => AddProductToCart(product.Id)" @onclick:preventDefault>
                <img src="images/addToCart.png" class="add-to-cart-image" />
            </a>
        </div>
        <hr />
    </div>
}

@code {
    public List<ProductDto> ShopProducts = new List<ProductDto>();

    protected override async Task OnInitializedAsync()
    {
        ShopProducts = await ShopHttpClient.GetProducts();
    }

    private void NavigateToEditingProduct(Guid productId)
    {
        NavigationManager.NavigateTo($"/EditProduct/{productId}");
    }

    private void NavigateToCreatingProduct()
    {
        NavigationManager.NavigateTo($"/CreateProduct");
    }

    private async Task DeleteProduct(ProductDto product)
    {
        await ShopHttpClient.DeleteProduct(product.Id);
        ShopProducts.Remove(product);

        ToastService.ShowSuccess(Messages.ProductDeleted);
    }

    private async Task AddProductToCart(Guid productId)
    {
        await CartService.AddProductToShoppingCart(productId);
        var cart = await CartService.GetShoppingCart();
        AppStateService.SetCartSummary(cart.TotalQuantity, cart.TotalPrice);

        ToastService.ShowSuccess(Messages.ProductAddedToCart);
    }

}
